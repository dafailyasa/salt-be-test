// import { Test } from '@nestjs/testing';
// import { Model } from "mongoose";
// import { ProductService } from "./product.service";
// import { ProductModel, ProductSchema } from "./product.model";
// import { ProductController } from "./product.controller";
// import { closeInMongodConnection, rootMongooseTestModule } from "../../../test/modules/mongooseTestModule";
// import { getModelToken, MongooseModule } from '@nestjs/mongoose';
// import { RedisService } from '../redis/redis.service';

// describe('Product Controller', () => {
//   let productService: ProductService;
//   let productModel: Model<ProductModel>;
//   let productController: ProductController;
//   let redisService: RedisService;

//   afterAll(async () => {
//     await closeInMongodConnection();
//   });

//   beforeEach(async () => {
//     const module = await Test.createTestingModule({
//       imports: [
//         rootMongooseTestModule(),
//         MongooseModule.forFeature([
//           { name: ProductModel.name, schema: ProductSchema },
//         ]),
//       ],
//       controllers: [ProductController],
//       providers: [
//         {
//           provide: ProductService,
//           useValue: {
//             create: jest.fn().mockImplementation(async (product) => {
//               const res = await productModel.create(product);
//               return res;
//             })
//           }
//         },
//         {
//           provide: RedisService,
//           useValue:{}
//         }
//       ]
//     }).compile()

//     productService = module.get<ProductService>(ProductService);
//     redisService = module.get<RedisService>(RedisService);
//     productModel = module.get<Model<ProductModel>>(
//       getModelToken('ProductModel')
//     );

//     productController = new ProductController(redisService, productService);
//   });


//   test('testing',() => {

//   })
// });